{"version":3,"sources":["video.svg","App.tsx","serviceWorker.ts","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","props","focusable","className","role","viewBox","ref","ForwardRef","forwardRef","API_BASE","fetchJson","url","a","async","fetch","result","json","fetchEventList","fetchEventInfo","eventId","fetchEventGameList","fetchSelectionList","formatDate","date","format","replace","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","getMilliseconds","filterUniqueItemsById","array","itemIds","map","item","filter","index","toggleDesc","genre","id","display","dom","document","getElementById","obj","style","MarathonInfoView","height","textAlign","type","value","onClick","closeFunc","fontSize","marathon","name","Date","startDate","endDate","overflowY","dangerouslySetInnerHTML","__html","marked","description","App","React","useState","marathonList","setMarathonList","firstProcess","setFirstProcess","marathonId","setMarathonId","marathonInfo","setMaraathonInfo","submissionList","setSubmissionList","selectionList","setSelectionList","filterReject","setFilterReject","isShowMarathonInfo","setIsShowMarathonInfo","isToggleAllDescription","setIsToggleAllDescription","message","setMessage","disabledMenu","setDisabledMenu","useEffect","eventList","list","live","open","next","newList","sort","b","init","tempMarathonId","window","location","search","queryId","match","undefined","eventData","gameData","selectionDone","selection","fetchData","onChange","event","disabled","visibility","width","displayType","submission","categories","category","htmlFor","checked","justifyContent","gameClass","selectedResult","TODO","VALIDATED","REJECTED","BONUS","status","user","usernameJapanese","username","console","clear","categoryClass","selectedToClassName","estimate","str","hourMatch","padStart","minuteMatch","secondMatch","ptToTime","e","stopPropagation","href","video","rel","color","opponentDtos","opp","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","addEventListener","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.194a3a0a.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M488 64h-8v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V64H96v20c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12V64h-8C10.7 64 0 74.7 0 88v336c0 13.3 10.7 24 24 24h8v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h320v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h8c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24zM96 372c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm272 208c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm0-168c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm112 152c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z\"\n});\n\nvar SvgVideo = function SvgVideo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"film\",\n    className: \"svg-inline--fa fa-film fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgVideo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/video.39133a5f.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport marked from 'marked';\r\nimport './App.css';\r\nimport { ReactComponent as VideoIcon } from './video.svg';\r\nimport { MarathonGameAPI, MarathonAPI, MarathonListAPI, SelectionAPI, SelectionStatus, MarathonInfo } from './types/oengus';\r\n\r\nconst API_BASE = 'https://oengus.io/api/';\r\n\r\nasync function fetchJson<T>(url: string): Promise<T> {\r\n  const result = await fetch(url);\r\n  const json = await result.json();\r\n  return json as T;\r\n}\r\n\r\nconst fetchEventList = async (): Promise<MarathonListAPI> => {\r\n  const url = `${API_BASE}marathon`;\r\n  return await fetchJson<MarathonListAPI>(url);\r\n};\r\n\r\nconst fetchEventInfo = (eventId: string): Promise<MarathonAPI> => {\r\n  const url = `${API_BASE}marathon/${eventId}`;\r\n  return fetchJson<MarathonAPI>(url);\r\n};\r\n\r\nconst fetchEventGameList = (eventId: string): Promise<MarathonGameAPI> => {\r\n  const url = `${API_BASE}marathon/${eventId}/game`;\r\n  return fetchJson<MarathonGameAPI>(url);\r\n};\r\n\r\nconst fetchSelectionList = (eventId: string): Promise<SelectionAPI> => {\r\n  const url = `${API_BASE}marathon/${eventId}/selection`;\r\n  return fetchJson<SelectionAPI>(url);\r\n};\r\n\r\n/** ESTのPTとかの時刻形式をHH:MM:SSの形式にする */\r\nconst ptToTime = (estimate: string): string => {\r\n  let str = '';\r\n  const hourMatch = estimate.match(/(\\d+)H/);\r\n  if (hourMatch && hourMatch.length === 2) {\r\n    str += `${hourMatch[1]}:`.padStart(3, '0');\r\n  } else {\r\n    str += '00:';\r\n  }\r\n\r\n  const minuteMatch = estimate.match(/(\\d+)M/);\r\n  if (minuteMatch && minuteMatch.length === 2) {\r\n    str += `${minuteMatch[1]}:`.padStart(3, '0');\r\n  } else {\r\n    str += '00:';\r\n  }\r\n\r\n  const secondMatch = estimate.match(/(\\d+)S/);\r\n  if (secondMatch && secondMatch.length === 2) {\r\n    str += `${secondMatch[1]}`.padStart(2, '0');\r\n  } else {\r\n    str += '00';\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\nconst formatDate = (date: Date, format: string): string => {\r\n  format = format.replace(/yyyy/g, `${date.getFullYear()}`);\r\n  format = format.replace(/MM/g, ('0' + (date.getMonth() + 1)).slice(-2));\r\n  format = format.replace(/dd/g, ('0' + date.getDate()).slice(-2));\r\n  format = format.replace(/HH/g, ('0' + date.getHours()).slice(-2));\r\n  format = format.replace(/mm/g, ('0' + date.getMinutes()).slice(-2));\r\n  format = format.replace(/ss/g, ('0' + date.getSeconds()).slice(-2));\r\n  format = format.replace(/SSS/g, ('00' + date.getMilliseconds()).slice(-3));\r\n  return format;\r\n};\r\n\r\n/** ユニーク処理 */\r\nfunction filterUniqueItemsById<T>(array: T[], key: string): T[] {\r\n  // idを集約した配列を作成\r\n  const itemIds = array.map(item => {\r\n    return (item as any)[key];\r\n  });\r\n  return array.filter((item, index) => {\r\n    return itemIds.indexOf((item as any)[key]) === index;\r\n  });\r\n}\r\n\r\n/** 詳細文の開閉 */\r\nconst toggleDesc = (genre: 'game' | 'category', id: number, display?: 'block' | 'none') => (): void => {\r\n  const dom = document.getElementById(`${genre}_desc_${id}`);\r\n  if (!dom) return;\r\n  const obj = dom.style;\r\n  // 指定されていればそのとおり上書き、指定されてなければ切り替え\r\n  if (display) {\r\n    obj.display = display;\r\n  } else {\r\n    obj.display = obj.display === 'none' ? 'block' : 'none';\r\n  }\r\n};\r\n\r\nconst selectedToClassName = (status: SelectionStatus): string => {\r\n  switch (status) {\r\n    case 'VALIDATED':\r\n      return 'validated';\r\n    case 'REJECTED':\r\n      return 'rejected';\r\n    case 'BONUS':\r\n      return 'bonus';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst MarathonInfoView = (props: { marathon: MarathonAPI; closeFunc: Function }): JSX.Element => {\r\n  return (\r\n    <div style={{ height: '100%' }}>\r\n      <div style={{ height: 20, textAlign: 'right' }}>\r\n        <input type={'button'} value={'×'} onClick={(): void => props.closeFunc()} />\r\n      </div>\r\n      <div style={{ height: 'calc(100% - 50px)' }}>\r\n        {/* イベント名 */}\r\n        <div style={{ fontSize: 20 }}>{props.marathon.name}</div>\r\n        {/* 開始日 */}\r\n        <div>開始：{formatDate(new Date(props.marathon.startDate), 'yyyy/MM/dd HH:mm')}</div>\r\n\r\n        {/* 終了日 */}\r\n        <div>終了：{formatDate(new Date(props.marathon.endDate), 'yyyy/MM/dd HH:mm')}</div>\r\n\r\n        <hr />\r\n        {/* 説明 */}\r\n        <div style={{ overflowY: 'scroll', height: 'calc(100% - 80px)', textAlign: 'initial', fontSize: 'small' }}>\r\n          <div dangerouslySetInnerHTML={{ __html: marked(props.marathon.description) }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App: React.SFC = () => {\r\n  // マラソンリスト\r\n  const [marathonList, setMarathonList] = React.useState<MarathonInfo[]>([]);\r\n  // 初期処理\r\n  const [firstProcess, setFirstProcess] = React.useState(true);\r\n  // マラソン種別\r\n  const [marathonId, setMarathonId] = React.useState<string>('');\r\n  // マラソン情報\r\n  const [marathonInfo, setMaraathonInfo] = React.useState<MarathonAPI>();\r\n  // 応募リスト\r\n  const [submissionList, setSubmissionList] = React.useState<MarathonGameAPI>([]);\r\n  // 選考結果\r\n  const [selectionList, setSelectionList] = React.useState<SelectionAPI>({});\r\n  // 落選を非表示\r\n  const [filterReject, setFilterReject] = React.useState(false);\r\n  // 概要を表示\r\n  const [isShowMarathonInfo, setIsShowMarathonInfo] = React.useState(false);\r\n  // 一括開閉の状態\r\n  const [isToggleAllDescription, setIsToggleAllDescription] = React.useState(false);\r\n\r\n  // メッセージ\r\n  const [message, setMessage] = React.useState<string>('');\r\n\r\n  // 処理中はメニュー非活性\r\n  const [disabledMenu, setDisabledMenu] = React.useState(false);\r\n\r\n  // マラソンリスト取得\r\n  React.useEffect(() => {\r\n    const init = async (): Promise<void> => {\r\n      try {\r\n        const eventList = await fetchEventList();\r\n        const list = [...eventList.live, ...eventList.open, ...eventList.next];\r\n        // IDでユニーク\r\n        const newList = filterUniqueItemsById(list, 'id');\r\n\r\n        // 名前でソート\r\n        newList.sort((a, b) => {\r\n          if (a.name > b.name) return 1;\r\n          if (a.name < b.name) return -1;\r\n          return 0;\r\n        });\r\n        setMarathonList(newList);\r\n      } catch (e) {\r\n        // どうしようか\r\n      }\r\n    };\r\n    init();\r\n  }, []);\r\n\r\n  // マラソン種別のセレクトボックス選択\r\n  React.useEffect(() => {\r\n    setDisabledMenu(true);\r\n    let tempMarathonId = marathonId;\r\n    if (firstProcess) {\r\n      if (window.location.search) {\r\n        const queryId = window.location.search.match(/marathon=(.*)/);\r\n        if (queryId && queryId?.length === 2) {\r\n          setMarathonId(queryId[1]);\r\n          tempMarathonId = queryId[1];\r\n        }\r\n      }\r\n      setFirstProcess(false);\r\n    }\r\n\r\n    if (!tempMarathonId) {\r\n      setMaraathonInfo(undefined);\r\n      setMessage('イベントを選択してください。');\r\n      setSubmissionList([]);\r\n      setDisabledMenu(false);\r\n      return;\r\n    }\r\n    setMessage('データ取得中...');\r\n\r\n    const fetchData = async (eventId: string): Promise<void> => {\r\n      try {\r\n        const eventData = await fetchEventInfo(eventId);\r\n        setMaraathonInfo(eventData);\r\n        const gameData = await fetchEventGameList(eventId);\r\n        if (eventData.selectionDone) {\r\n          const selection = await fetchSelectionList(eventId);\r\n          setSelectionList(selection);\r\n        }\r\n        setSubmissionList(gameData);\r\n        setMessage(`応募ゲーム数：${gameData.length}`);\r\n      } catch (e) {\r\n        setMessage(`データ取得でエラーがありました。`);\r\n      } finally {\r\n        setDisabledMenu(false);\r\n      }\r\n    };\r\n\r\n    fetchData(tempMarathonId);\r\n  }, [marathonId]);\r\n\r\n  const showMarathonInfo = (): void => setIsShowMarathonInfo(true);\r\n  const toggleOpenClose = (): void => {\r\n    const displayType = isToggleAllDescription ? 'none' : 'block';\r\n    for (const submission of submissionList) {\r\n      toggleDesc('game', submission.id, displayType)();\r\n      for (const category of submission.categories) {\r\n        toggleDesc('category', category.id, displayType)();\r\n      }\r\n    }\r\n\r\n    setIsToggleAllDescription(!isToggleAllDescription);\r\n  };\r\n  const closeMarathonInfo = (): void => setIsShowMarathonInfo(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* マラソン情報 */}\r\n      {isShowMarathonInfo && marathonInfo && (\r\n        <div className={'modal'}>\r\n          <MarathonInfoView marathon={marathonInfo} closeFunc={closeMarathonInfo} />\r\n        </div>\r\n      )}\r\n\r\n      {!isShowMarathonInfo && (\r\n        <div>\r\n          {/* マラソン種別 */}\r\n          <div className={'header'}>\r\n            <div>\r\n              <select value={marathonId} onChange={(event): void => setMarathonId(event.target.value)} disabled={disabledMenu}>\r\n                <option value=\"\">-</option>\r\n                {marathonList.map((marathon, index) => (\r\n                  <option key={`${marathon.id}_${index}`} value={marathon.id}>\r\n                    {marathon.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div style={{ visibility: marathonInfo ? 'visible' : 'hidden' }}>\r\n              <div style={{ display: 'flex' }}>\r\n                <div style={{ width: 'calc(100% - 250px)' }}>\r\n                  <input type={'button'} value={'概要を見る'} onClick={showMarathonInfo} />\r\n                </div>\r\n                <div style={{ width: 'calc(100% - 250px)' }}>\r\n                  <input type={'button'} value={'応募の一括開閉'} onClick={toggleOpenClose} />\r\n                </div>\r\n                <div style={{ visibility: marathonInfo?.selectionDone ? 'visible' : 'hidden' }}>\r\n                  <label htmlFor=\"filter_check\">当選のみ</label>\r\n                  <input id=\"filter_check\" type={'checkbox'} onChange={(): void => setFilterReject(!filterReject)} checked={filterReject} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 応募リスト */}\r\n          <div style={{ textAlign: 'left', display: 'flex', justifyContent: 'center' }}>\r\n            <div style={{ display: 'block', width: 1000 }}>\r\n              <div className=\"message\">{message}</div>\r\n              {submissionList.map(submission => {\r\n                // 採用されたカテゴリがあれば色をつける\r\n                let gameClass = '';\r\n                const selectedResult = {\r\n                  TODO: 0,\r\n                  VALIDATED: 0,\r\n                  REJECTED: 0,\r\n                  BONUS: 0,\r\n                };\r\n                for (const category of submission.categories) {\r\n                  if (selectionList[category.id]) {\r\n                    selectedResult[selectionList[category.id].status] += 1;\r\n                  } else {\r\n                    selectedResult.TODO += 1;\r\n                  }\r\n                }\r\n                if (selectedResult.VALIDATED > 0) {\r\n                  gameClass = 'validated';\r\n                } else if (selectedResult.BONUS > 0) {\r\n                  gameClass = 'bonus';\r\n                } else if (selectedResult.TODO > 0) {\r\n                  gameClass = '';\r\n                } else {\r\n                  gameClass = 'rejected';\r\n                }\r\n                // フィルターオンで、採用されたカテゴリが0件\r\n                if (filterReject && selectedResult.REJECTED === submission.categories.length) return '';\r\n\r\n                return (\r\n                  <div key={submission.id} className={`submissionBase`}>\r\n                    <div className={gameClass} onClick={toggleDesc('game', submission.id)}>\r\n                      {/* ゲームタイトル */}\r\n                      <div style={{ display: 'flex' }}>\r\n                        <div style={{ width: 70 }}>ゲーム：</div>\r\n                        <div style={{ width: 'calc(100% - 70px)' }}>{submission.name}</div>\r\n                      </div>\r\n                      {/* 走者 */}\r\n                      <div style={{ display: 'flex' }}>\r\n                        <div style={{ width: 70 }}>走者：</div>\r\n                        <div style={{ width: 'calc(100% - 70px)' }}>{submission.user.usernameJapanese ? submission.user.usernameJapanese : submission.user.username}</div>\r\n                      </div>\r\n                      {/* 機種 */}\r\n                      <div style={{ display: 'flex' }}>\r\n                        <div style={{ width: 70 }}>機種：</div>\r\n                        <div style={{ width: 'calc(100% - 70px)' }}>{submission.console}</div>\r\n                      </div>\r\n                      {/* 説明 */}\r\n                      <div id={`game_desc_${submission.id}`} style={{ display: 'none', clear: 'both' }}>\r\n                        {submission.description}\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n\r\n                    {/* カテゴリ */}\r\n                    {submission.categories.map(category => {\r\n                      // 選考結果\r\n                      const result = selectionList[category.id] ? selectionList[category.id].status : 'TODO';\r\n                      if (filterReject && result === 'REJECTED') return '';\r\n                      const categoryClass = selectedToClassName(result);\r\n\r\n                      return (\r\n                        <div key={category.id} className={categoryClass}>\r\n                          <div onClick={toggleDesc('category', category.id)}>\r\n                            <div key={category.id} style={{ display: 'flex' }}>\r\n                              {/* カテゴリ名 */}\r\n                              <div className={'categoryName'}>{category.name}</div>\r\n\r\n                              {/* タイム */}\r\n                              <div style={{ width: 70 }}>{ptToTime(category.estimate)}</div>\r\n                              {/* 動画リンク */}\r\n                              <div style={{ width: 20 }} onClick={(e: React.MouseEvent<HTMLDivElement>): void => e.stopPropagation()}>\r\n                                <a href={category.video} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                  <VideoIcon style={{ height: 15, color: '#b58900' }} />\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                            <div>\r\n                              {category.opponentDtos.map(opp => {\r\n                                return (\r\n                                  <div key={`${category.id}_${opp.id}`} style={{ display: 'flex' }}>\r\n                                    {/* レース相手のユーザ名 */}\r\n                                    <div style={{ width: 'calc(100% - 20px)' }}>\r\n                                      {category.type}：{opp.user.usernameJapanese ? opp.user.usernameJapanese : opp.user.username}\r\n                                    </div>\r\n\r\n                                    {/* 動画リンク */}\r\n                                    <div style={{ width: 20 }}>\r\n                                      <a href={opp.video} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        <VideoIcon style={{ height: 15, color: '#b58900' }} />\r\n                                      </a>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          </div>\r\n                          {/* カテゴリ名クリックで展開する、カテゴリ説明 */}\r\n                          <div id={`category_desc_${category.id}`} style={{ display: 'none', clear: 'both' }}>\r\n                            {category.description}\r\n                          </div>\r\n                          <hr className={'categoryLine'} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}