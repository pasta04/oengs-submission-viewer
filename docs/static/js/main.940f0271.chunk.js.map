{"version":3,"sources":["util.ts","component/video.svg","component/MarathonInfo.tsx","component/Schedule.tsx","component/App.tsx","serviceWorker.ts","index.tsx"],"names":["ptToTime","estimate","str","hourMatch","match","length","padStart","minuteMatch","secondMatch","formatDate","date","format","replace","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","getMilliseconds","filterUniqueItemsById","array","key","itemIds","map","item","filter","index","indexOf","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","props","focusable","className","role","viewBox","ref","ForwardRef","forwardRef","MarathonInfoView","style","height","width","textAlign","type","value","onClick","closeFunc","fontSize","marathon","name","util","Date","startDate","endDate","overflowY","dangerouslySetInnerHTML","__html","marked","description","App","React","useState","lines","setLines","useEffect","newLines","schedule","baseDate","push","setHours","line","nextDate","id","game","game1","gameName","time","setupBlock","setupBlockText","setupTime","categoryName","runners","run","usernameJapanese","username","join","API_BASE","fetchJson","url","a","async","fetch","result","json","fetchEventList","fetchFutureEventList","now","start","toISOString","setMonth","end","fetchEventInfo","eventId","fetchEventGameList","submissionList","list","submission","games","g","user","fetchSelectionList","fetchScheduleList","toggleDesc","genre","display","dom","document","getElementById","obj","marathonList","setMarathonList","firstProcess","setFirstProcess","marathonId","setMarathonId","marathonInfo","setMaraathonInfo","setSubmissionList","scheduleList","setScheduleList","selectionList","setSelectionList","filterReject","setFilterReject","viewType","setViewType","isToggleAllDescription","setIsToggleAllDescription","message","setMessage","disabledMenu","setDisabledMenu","eventList","futureList","live","open","next","newList","sort","b","init","tempMarathonId","window","location","search","queryId","undefined","eventData","gameData","selectionDone","selection","scheduleDone","fetchData","showSubmission","sortType","setSortType","MarathonInfo","Schedule","marginBottom","onChange","event","disabled","visibility","justifyContent","marginRight","displayType","categories","category","Number","htmlFor","checked","margin","gameClass","selectedResult","TODO","VALIDATED","REJECTED","BONUS","BACKUP","status","usernameDisp","console","clear","categoryClass","selectedToClassName","e","stopPropagation","href","video","rel","color","opponentDtos","opp","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","addEventListener","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.940f0271.chunk.js","sourcesContent":["/** ESTのPTとかの時刻形式をHH:MM:SSの形式にする */\nexport const ptToTime = (estimate: string): string => {\n  let str = '';\n  const hourMatch = estimate.match(/(\\d+)H/);\n  if (hourMatch && hourMatch.length === 2) {\n    str += `${hourMatch[1]}:`.padStart(3, '0');\n  } else {\n    str += '00:';\n  }\n\n  const minuteMatch = estimate.match(/(\\d+)M/);\n  if (minuteMatch && minuteMatch.length === 2) {\n    str += `${minuteMatch[1]}:`.padStart(3, '0');\n  } else {\n    str += '00:';\n  }\n\n  const secondMatch = estimate.match(/(\\d+)S/);\n  if (secondMatch && secondMatch.length === 2) {\n    str += `${secondMatch[1]}`.padStart(2, '0');\n  } else {\n    str += '00';\n  }\n\n  return str;\n};\n\nexport const formatDate = (date: Date, format: string): string => {\n  format = format.replace(/yyyy/g, `${date.getFullYear()}`);\n  format = format.replace(/MM/g, ('0' + (date.getMonth() + 1)).slice(-2));\n  format = format.replace(/dd/g, ('0' + date.getDate()).slice(-2));\n  format = format.replace(/HH/g, ('0' + date.getHours()).slice(-2));\n  format = format.replace(/mm/g, ('0' + date.getMinutes()).slice(-2));\n  format = format.replace(/ss/g, ('0' + date.getSeconds()).slice(-2));\n  format = format.replace(/SSS/g, ('00' + date.getMilliseconds()).slice(-3));\n  return format;\n};\n\n/** ユニーク処理 */\nexport function filterUniqueItemsById<T>(array: T[], key: string): T[] {\n  // idを集約した配列を作成\n  const itemIds = array.map(item => {\n    return (item as any)[key];\n  });\n  return array.filter((item, index) => {\n    return itemIds.indexOf((item as any)[key]) === index;\n  });\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M488 64h-8v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V64H96v20c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12V64h-8C10.7 64 0 74.7 0 88v336c0 13.3 10.7 24 24 24h8v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h320v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h8c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24zM96 372c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm272 208c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm0-168c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm112 152c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z\"\n});\n\nvar SvgVideo = function SvgVideo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"film\",\n    className: \"svg-inline--fa fa-film fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgVideo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/video.39133a5f.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport marked from 'marked';\nimport * as util from '../util';\nimport './App.css';\nimport { MarathonAPI } from '../types/oengus';\n\nconst MarathonInfoView = (props: { marathon: MarathonAPI; closeFunc: Function }): JSX.Element => {\n  return (\n    <div style={{ height: '100%', width: 1000 }}>\n      <div style={{ height: 20, textAlign: 'right' }}>\n        <input type={'button'} value={'×'} onClick={(): void => props.closeFunc()} />\n      </div>\n      <div style={{ height: 'calc(100% - 50px)' }}>\n        {/* イベント名 */}\n        <div style={{ fontSize: 20 }}>{props.marathon.name}</div>\n        {/* 開始日 */}\n        <div>開始：{util.formatDate(new Date(props.marathon.startDate), 'yyyy/MM/dd HH:mm')}</div>\n\n        {/* 終了日 */}\n        <div>終了：{util.formatDate(new Date(props.marathon.endDate), 'yyyy/MM/dd HH:mm')}</div>\n\n        <hr />\n        {/* 説明 */}\n        <div style={{ overflowY: 'scroll', height: 'calc(100% - 80px)', textAlign: 'initial', fontSize: 'small' }}>\n          <div dangerouslySetInnerHTML={{ __html: marked(props.marathon.description) }} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MarathonInfoView;\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { ScheduleAPI } from '../types/oengus';\nimport * as util from '../util';\n\ntype Props = {\n  title: string;\n  schedule: ScheduleAPI;\n  closeFunc: Function;\n};\n\ntype Line = { date: Date } | ScheduleAPI['lines'];\n\nconst App: React.FC<Props> = (props: Props) => {\n  const [lines, setLines] = React.useState<Line[]>([]);\n\n  useEffect(() => {\n    // 日付の境目で日付用のデータを差し込む\n    const newLines = [];\n    if (props.schedule.lines.length === 0) {\n      setLines([]);\n    } else {\n      // 初回の日付\n      let baseDate = new Date(props.schedule.lines[0].date);\n      newLines.push({ date: baseDate });\n\n      baseDate.setHours(0, 0, 0);\n      props.schedule.lines.map(line => {\n        const nextDate = new Date(line.date);\n        nextDate.setHours(0, 0, 0);\n        if (baseDate < nextDate) {\n          newLines.push({ date: nextDate });\n          baseDate = nextDate;\n        }\n        newLines.push(line);\n      });\n      setLines(newLines);\n    }\n  }, [props.schedule.lines[0]?.id]);\n\n  return (\n    <div className=\"scheduleRoot\">\n      <div className=\"scheduleHeader\">\n        <div className=\"closeButton\">\n          <input type={'button'} value={'×'} onClick={(): void => props.closeFunc()} />\n        </div>\n\n        <div className=\"scheduleTitle\">{props.title}</div>\n        <hr />\n      </div>\n\n      <div className=\"scheduleContent\">\n        <div>\n          {lines.map((game, index) => {\n            if (((game as unknown) as ScheduleAPI['lines'][0]).id) {\n              const game1 = (game as unknown) as ScheduleAPI['lines'][0];\n              let title = game1.gameName;\n              let time = game1.estimate;\n              if (game1.setupBlock) {\n                if (game1.setupBlockText) {\n                  title = game1.setupBlockText;\n                } else {\n                  title = 'セットアップブロック';\n                }\n\n                time = game1.setupTime;\n              }\n\n              return (\n                <div className=\"scheduleLine\" key={index}>\n                  <div className=\"scheduleMain\">\n                    <div className=\"scheduleDate\">{util.formatDate(new Date(game1.date), 'HH:mm')}</div>\n                    <div className=\"scheduleGame\">{title}</div>\n                  </div>\n                  <div className=\"scheduleSub\">\n                    <div className=\"scheduleCategory\">{game1.categoryName}</div>\n                    <div className=\"scheduleEst\">{util.ptToTime(time)}</div>\n                  </div>\n                  <div className=\"scheduleSub\">\n                    <hr className=\"scheduleBorder\" />\n                  </div>\n                  <div className=\"scheduleSub\">\n                    <div>{game1.runners.map(run => (run.usernameJapanese ? run.usernameJapanese : run.username)).join(' / ')}</div>\n                  </div>\n                </div>\n              );\n            } else {\n              const game1 = (game as unknown) as { date: Date };\n              return <div className=\"scheduleDateLine\">{util.formatDate(game1.date, 'yyyy/MM/dd')}</div>;\n            }\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport * as util from '../util';\nimport './App.css';\nimport { ReactComponent as VideoIcon } from './video.svg';\nimport { MarathonGameAPI, MarathonAPI, MarathonListAPI, SelectionAPI, SelectionStatus, MarathonInfo, ScheduleAPI, MarathonSubmissionAPI, Game } from '../types/oengus';\nimport MarathonInfoView from './MarathonInfo';\nimport Schedule from './Schedule';\n\nconst API_BASE = 'https://oengus.io/api/';\n\nasync function fetchJson<T>(url: string): Promise<T> {\n  const result = await fetch(url);\n  const json = await result.json();\n  return json as T;\n}\n\nconst fetchEventList = async (): Promise<MarathonListAPI> => {\n  const url = `${API_BASE}marathon`;\n  return await fetchJson<MarathonListAPI>(url);\n};\n\n/** 半年先までのイベント情報を取得 */\nconst fetchFutureEventList = async (): Promise<MarathonAPI[]> => {\n  const now = new Date();\n  const start = now.toISOString();\n  // 半年後\n  now.setMonth(now.getMonth() + 6);\n  const end = now.toISOString();\n\n  const url = `${API_BASE}marathon/forDates?start=${start}&end=${end}&zoneId=Asia/Tokyo`;\n  return await fetchJson<MarathonAPI[]>(url);\n};\n\nconst fetchEventInfo = (eventId: string): Promise<MarathonAPI> => {\n  const url = `${API_BASE}marathon/${eventId}`;\n  return fetchJson<MarathonAPI>(url);\n};\n\nconst fetchEventGameList = async (eventId: string): Promise<MarathonGameAPI> => {\n  const url = `${API_BASE}marathon/${eventId}/submissions`;\n  const submissionList = await fetchJson<MarathonSubmissionAPI>(url);\n  const list: MarathonGameAPI = [];\n  submissionList.map(submission => {\n    submission.games.map(game => {\n      const g: Game = {\n        ...game,\n        user: submission.user,\n      };\n      list.push(g);\n    });\n  });\n\n  return list;\n};\n\nconst fetchSelectionList = (eventId: string): Promise<SelectionAPI> => {\n  const url = `${API_BASE}marathon/${eventId}/selection`;\n  return fetchJson<SelectionAPI>(url);\n};\n\nconst fetchScheduleList = (eventId: string): Promise<ScheduleAPI> => {\n  const url = `${API_BASE}marathon/${eventId}/schedule`;\n  return fetchJson<ScheduleAPI>(url);\n};\n\n/** 詳細文の開閉 */\nconst toggleDesc = (genre: 'game' | 'category', id: number, display?: 'block' | 'none') => (): void => {\n  const dom = document.getElementById(`${genre}_desc_${id}`);\n  if (!dom) return;\n  const obj = dom.style;\n  // 指定されていればそのとおり上書き、指定されてなければ切り替え\n  if (display) {\n    obj.display = display;\n  } else {\n    obj.display = obj.display === 'none' ? 'block' : 'none';\n  }\n};\n\nconst selectedToClassName = (status: SelectionStatus): string => {\n  switch (status) {\n    case 'VALIDATED':\n      return 'validated';\n    case 'REJECTED':\n      return 'rejected';\n    case 'BONUS':\n      return 'bonus';\n    case 'BACKUP':\n      return 'backup';\n    default:\n      return '';\n  }\n};\n\nconst App: React.FC = () => {\n  // マラソンリスト\n  const [marathonList, setMarathonList] = React.useState<MarathonInfo[]>([]);\n  // 初期処理\n  const [firstProcess, setFirstProcess] = React.useState(true);\n  // マラソン種別\n  const [marathonId, setMarathonId] = React.useState<string>('');\n  // マラソン情報\n  const [marathonInfo, setMaraathonInfo] = React.useState<MarathonAPI>();\n  // 応募リスト\n  const [submissionList, setSubmissionList] = React.useState<MarathonGameAPI>([]);\n  // スケジュールリスト\n  const [scheduleList, setScheduleList] = React.useState<ScheduleAPI>({ id: 0, lines: [] });\n  // 選考結果\n  const [selectionList, setSelectionList] = React.useState<SelectionAPI>({});\n  // 落選を非表示\n  const [filterReject, setFilterReject] = React.useState(false);\n  // 概要を表示\n  const [viewType, setViewType] = React.useState<'submission' | 'marathonInfo' | 'schedule'>('submission');\n  // 一括開閉の状態\n  const [isToggleAllDescription, setIsToggleAllDescription] = React.useState(false);\n\n  // メッセージ\n  const [message, setMessage] = React.useState<string>('');\n\n  // 処理中はメニュー非活性\n  const [disabledMenu, setDisabledMenu] = React.useState(false);\n\n  // マラソンリスト取得\n  React.useEffect(() => {\n    const init = async (): Promise<void> => {\n      try {\n        const eventList = await fetchEventList();\n        const futureList = await fetchFutureEventList();\n        const list = [...eventList.live, ...eventList.open, ...eventList.next, ...futureList];\n        // IDでユニーク\n        const newList = util.filterUniqueItemsById(list, 'id');\n\n        // 名前でソート\n        newList.sort((a, b) => {\n          if (a.name > b.name) return 1;\n          if (a.name < b.name) return -1;\n          return 0;\n        });\n        setMarathonList(newList);\n      } catch (e) {\n        // どうしようか\n      }\n    };\n    init();\n  }, []);\n\n  // マラソン種別のセレクトボックス選択\n  React.useEffect(() => {\n    setDisabledMenu(true);\n    let tempMarathonId = marathonId;\n    if (firstProcess) {\n      if (window.location.search) {\n        const queryId = window.location.search.match(/marathon=(.*)/);\n        if (queryId && queryId?.length === 2) {\n          setMarathonId(queryId[1]);\n          tempMarathonId = queryId[1];\n        }\n      }\n      setFirstProcess(false);\n    }\n\n    if (!tempMarathonId) {\n      setMaraathonInfo(undefined);\n      setMessage('イベントを選択してください。');\n      setSubmissionList([]);\n      setDisabledMenu(false);\n      return;\n    }\n    setMessage('データ取得中...');\n\n    const fetchData = async (eventId: string): Promise<void> => {\n      try {\n        setMessage('イベント情報取得中...');\n        const eventData = await fetchEventInfo(eventId);\n        setMaraathonInfo(eventData);\n\n        setMessage('応募情報取得中...');\n        const gameData = await fetchEventGameList(eventId);\n        setSubmissionList(gameData);\n\n        if (eventData.selectionDone) {\n          setMessage('選考情報取得中...');\n          const selection = await fetchSelectionList(eventId);\n          setSelectionList(selection);\n        }\n\n        if (eventData.scheduleDone) {\n          setMessage('スケジュール情報取得中...');\n          const schedule = await fetchScheduleList(eventId);\n          setScheduleList(schedule);\n        }\n\n        setMessage(`応募ゲーム数：${gameData.length}`);\n      } catch (e) {\n        setMessage(`データ取得でエラーがありました。`);\n      } finally {\n        setDisabledMenu(false);\n      }\n    };\n\n    fetchData(tempMarathonId);\n  }, [marathonId]);\n\n  const showMarathonInfo = (): void => setViewType('marathonInfo');\n  const showSubmission = (): void => setViewType('submission');\n  const showSchedule = (): void => setViewType('schedule');\n  const toggleOpenClose = (): void => {\n    const displayType = isToggleAllDescription ? 'none' : 'block';\n    for (const submission of submissionList) {\n      toggleDesc('game', submission.id, displayType)();\n      for (const category of submission.categories) {\n        toggleDesc('category', category.id, displayType)();\n      }\n    }\n\n    setIsToggleAllDescription(!isToggleAllDescription);\n  };\n\n  const [sortType, setSortType] = React.useState(0);\n  const changeSort = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    const sortType = Number(event.target.value);\n    setSortType(sortType);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* マラソン情報 */}\n      {viewType === 'marathonInfo' && marathonInfo && (\n        <div className={'modal'}>\n          <MarathonInfoView marathon={marathonInfo} closeFunc={showSubmission} />\n        </div>\n      )}\n\n      {/* スケジュール情報 */}\n      {viewType === 'schedule' && (\n        <div className={'modal'}>\n          <Schedule title={marathonInfo?.name ?? ''} schedule={scheduleList} closeFunc={showSubmission} />\n        </div>\n      )}\n\n      {viewType === 'submission' && (\n        <div>\n          {/* マラソン種別 */}\n          <div className={'header'}>\n            <div style={{ marginBottom: 5 }}>\n              <select value={marathonId} onChange={(event): void => setMarathonId(event.target.value)} disabled={disabledMenu}>\n                <option value=\"\">-</option>\n                {marathonList.map((marathon, index) => (\n                  <option key={`${marathon.id}_${index}`} value={marathon.id}>\n                    {marathon.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div style={{ visibility: marathonInfo ? 'visible' : 'hidden' }}>\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <div style={{ marginRight: 10 }}>\n                  <input type={'button'} value={'概要'} onClick={showMarathonInfo} />\n                </div>\n                <div style={{ marginRight: 10 }}>\n                  <input type={'button'} value={'一括開閉'} onClick={toggleOpenClose} />\n                </div>\n                <div>\n                  <select style={{ width: 70 }} onChange={changeSort} value={sortType}>\n                    <option value={0}>応募順</option>\n                    <option value={1}>ゲーム名-昇順</option>\n                    <option value={2}>ゲーム名-降順</option>\n                  </select>\n                </div>\n                {/* 選考結果が表示されてる場合は、当選フィルタを表示 */}\n                <div style={{ visibility: marathonInfo?.selectionDone ? 'visible' : 'hidden' }}>\n                  <label style={{ fontSize: 12 }} htmlFor=\"filter_check\">\n                    当選のみ\n                  </label>\n                  <input id=\"filter_check\" type={'checkbox'} onChange={(): void => setFilterReject(!filterReject)} checked={filterReject} />\n                </div>\n              </div>\n              {marathonInfo?.scheduleDone && scheduleList.lines.length > 0 ? (\n                <div style={{ margin: 10 }}>\n                  <input type={'button'} value={'公開中のスケジュール'} onClick={showSchedule} />\n                </div>\n              ) : (\n                ''\n              )}\n            </div>\n          </div>\n\n          {/* 応募リスト */}\n          <div style={{ textAlign: 'left', display: 'flex', justifyContent: 'center' }}>\n            <div style={{ display: 'block', width: 1000 }}>\n              <div className=\"message\">{message}</div>\n              {submissionList\n                .sort((a, b) => {\n                  switch (sortType) {\n                    case 1:\n                      if (a.name > b.name) return 1;\n                      if (a.name < b.name) return -1;\n                      return 0;\n                    case 2:\n                      if (a.name < b.name) return 1;\n                      if (a.name > b.name) return -1;\n                      return 0;\n                    default:\n                      if (a.id > b.id) return 1;\n                      if (a.id < b.id) return -1;\n                      return 0;\n                  }\n                })\n                .map(submission => {\n                  // 採用されたカテゴリがあれば色をつける\n                  let gameClass = '';\n                  const selectedResult = {\n                    TODO: 0,\n                    VALIDATED: 0,\n                    REJECTED: 0,\n                    BONUS: 0,\n                    BACKUP: 0,\n                  };\n                  for (const category of submission.categories) {\n                    if (selectionList[category.id]) {\n                      selectedResult[selectionList[category.id].status] += 1;\n                    } else {\n                      selectedResult.TODO += 1;\n                    }\n                  }\n                  if (selectedResult.VALIDATED > 0) {\n                    gameClass = 'validated';\n                  } else if (selectedResult.BONUS > 0) {\n                    gameClass = 'bonus';\n                  } else if (selectedResult.BACKUP > 0) {\n                    gameClass = 'backup';\n                  } else if (selectedResult.TODO > 0) {\n                    gameClass = '';\n                  } else {\n                    gameClass = 'rejected';\n                  }\n                  // フィルターオンで、採用されたカテゴリが0件\n                  if (filterReject && selectedResult.REJECTED === submission.categories.length) return '';\n\n                  let usernameDisp = '★取得失敗★';\n                  if (submission.user) {\n                    usernameDisp = submission.user.usernameJapanese ? submission.user.usernameJapanese : submission.user.username;\n                  }\n\n                  return (\n                    <div key={submission.id} className={`submissionBase`}>\n                      <div className={gameClass}>\n                        <div onClick={toggleDesc('game', submission.id)}>\n                          {/* ゲームタイトル */}\n                          <div style={{ display: 'flex' }}>\n                            <div style={{ width: 70 }}>ゲーム：</div>\n                            <div style={{ width: 'calc(100% - 70px)' }}>{submission.name}</div>\n                          </div>\n                          {/* 走者 */}\n                          <div style={{ display: 'flex' }}>\n                            <div style={{ width: 70 }}>走者：</div>\n                            <div style={{ width: 'calc(100% - 70px)' }}>{usernameDisp}</div>\n                          </div>\n                          {/* 機種 */}\n                          <div style={{ display: 'flex' }}>\n                            <div style={{ width: 70 }}>機種：</div>\n                            <div style={{ width: 'calc(100% - 70px)' }}>{submission.console}</div>\n                          </div>\n                        </div>\n                        {/* 説明 */}\n                        <div id={`game_desc_${submission.id}`} style={{ display: 'none', clear: 'both' }}>\n                          {submission.description}\n                        </div>\n                      </div>\n                      <hr />\n\n                      {/* カテゴリ */}\n                      {submission.categories.map(category => {\n                        // 選考結果\n                        const result = selectionList[category.id] ? selectionList[category.id].status : 'TODO';\n                        if (filterReject && result === 'REJECTED') return '';\n                        const categoryClass = selectedToClassName(result);\n\n                        return (\n                          <div key={category.id} className={categoryClass}>\n                            <div onClick={toggleDesc('category', category.id)}>\n                              <div key={category.id} style={{ display: 'flex' }}>\n                                {/* カテゴリ名 */}\n                                <div className={'categoryName'}>{category.name}</div>\n\n                                {/* タイム */}\n                                <div style={{ width: 70 }}>{util.ptToTime(category.estimate)}</div>\n                                {/* 動画リンク */}\n                                <div style={{ width: 20 }} onClick={(e: React.MouseEvent<HTMLDivElement>): void => e.stopPropagation()}>\n                                  <a href={category.video} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <VideoIcon style={{ height: 15, color: '#b58900' }} />\n                                  </a>\n                                </div>\n                              </div>\n                              <div>\n                                {category.opponentDtos.map(opp => {\n                                  let usernameDisp = '★取得失敗★';\n                                  if (opp.user) {\n                                    usernameDisp = opp.user.usernameJapanese ? opp.user.usernameJapanese : opp.user.username;\n                                  }\n\n                                  return (\n                                    <div key={`${category.id}_${opp.id}`} style={{ display: 'flex' }}>\n                                      {/* レース相手のユーザ名 */}\n                                      <div style={{ width: 'calc(100% - 20px)' }}>\n                                        {category.type}：{usernameDisp}\n                                      </div>\n\n                                      {/* 動画リンク */}\n                                      <div style={{ width: 20 }}>\n                                        <a href={opp.video} target=\"_blank\" rel=\"noopener noreferrer\">\n                                          <VideoIcon style={{ height: 15, color: '#b58900' }} />\n                                        </a>\n                                      </div>\n                                    </div>\n                                  );\n                                })}\n                              </div>\n                            </div>\n                            {/* カテゴリ名クリックで展開する、カテゴリ説明 */}\n                            <div id={`category_desc_${category.id}`} style={{ display: 'none', clear: 'both' }}>\n                              {category.description}\n                            </div>\n                            <hr className={'categoryLine'} />\n                          </div>\n                        );\n                      })}\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}